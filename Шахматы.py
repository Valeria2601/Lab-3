# Решение задачи
# Ввод данных
k = int(input("Введите номер вертикали первой клетки (от 1 до 8): "))
l = int(input("Введите номер горизонтали первой клетки (от 1 до 8): "))
m = int(input("Введите номер вертикали второй клетки (от 1 до 8): "))
n = int(input("Введите номер горизонтали второй клетки (от 1 до 8): "))
figure = input("Введите наименование фигуры (ферзь, ладья, слон или конь): ")

# Проверка на корректность введенных данных
if k < 1 or k > 8 or l < 1 or l > 8 or m < 1 or m > 8 or n < 1 or n > 8:
    print("Некорректно введены данные")
    exit()

# Определение цвета полей
color1 = (k + l) % 2
color2 = (m + n) % 2

# Проверка на одинаковый цвет полей
if color1 == color2:
    print("Поля ({}, {}) и ({}, {}) имеют одинаковый цвет".format(k, l, m, n))
else:
    print("Поля ({}, {}) и ({}, {}) имеют разный цвет".format(k, l, m, n))

# Проверка угрозы фигурой
if figure == "ферзь":
    # Угроза по вертикали или горизонтали
    if k == m or l == n:
        print("Ферзь угрожает полю ({}, {})".format(m, n))
    # Угроза по диагонали
    elif abs(k - m) == abs(l - n):
        print("Ферзь угрожает полю ({}, {})".format(m, n))
    else:
        print("Ферзь не угрожает полю ({}, {})".format(m, n))

elif figure == "ладья":
    # Угроза по вертикали или горизонтали
    if k == m or l == n:
        print("Ладья угрожает полю ({}, {})".format(m, n))
    else:
        print("Ладья не угрожает полю ({}, {})".format(m, n))

elif figure == "слон":
    # Угроза по диагонали
    if abs(k - m) == abs(l - n):
        print("Слон угрожает полю ({}, {})".format(m, n))
    else:
        print("Слон не угрожает полю ({}, {})".format(m, n))

elif figure == "конь":
    # Проверка возможности хода конем на выбранное поле
    if (abs(k - m) == 1 and abs(l - n) == 2) or (abs(k - m) == 2 and abs(l - n) == 1):
        print("Конь угрожает полю ({}, {})".format(m, n))
    else:
        print("Конь не угрожает полю ({}, {})".format(m, n))

else:
    print("Некорректно введено наименование фигуры")

# Проверка возможности хода ферзем, ладьей или слоном
if figure == "ферзь" or figure == "ладья" or figure == "слон":
    # Проверка на совпадение вертикалей или горизонталей
    if k == m or l == n:
        print("Фигура {} может попасть на поле ({}, {}) одним ходом".format(figure, m, n))
    # Проверка на совпадение диагоналей
    elif abs(k - m) == abs(l - n):
        print("Фигура {} может попасть на поле ({}, {}) одним ходом".format(figure, m, n))
    else:
        # Поиск поля, на которое можно попасть за два хода
        for i in range(1, 9):
            for j in range(1, 9):
                # Проверка на совпадение вертикалей или горизонталей с промежуточным полем
                if k == i or l == j:
                    # Проверка на совпадение диагоналей с промежуточным полем
                    if abs(k - i) == abs(l - j):
                        # Проверка на совпадение вертикалей или горизонталей с конечным полем
                        if i == m or j == n:
                            print("Фигура {} может попасть на поле ({}, {}) за два хода".format(figure, i, j))
                            exit()

        # Если не найдено поле, на которое можно попасть за два хода
        print("Фигура {} не может попасть на поле ({}, {}) за два хода".format(figure, m, n))

# Отображение доски с отмеченными полями (задание*)
# Создание доски в виде двумерного списка
board = [["-" for i in range(8)] for j in range(8)]

# Определение цвета полей и отметка выбранных полей
board[k-1][l-1] = "X" if color1 == 0 else "O"
board[m-1][n-1] = "X" if color2 == 0 else "O"

# Вывод доски на экран
print("  A B C D E F G H")
for i in range(8):
    print(i+1, end=" ")
    for j in range(8):
        print(board[i][j], end=" ")
    print()